

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Mon Mar 31 23:41:55 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     7                           	psect	text1,local,class=CODE,space=0,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,space=0,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 12/10/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F887 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0004                     fsr             equ	4
    49     0004                     fsr0            equ	4
    50     0000                     indf            equ	0
    51     0000                     indf0           equ	0
    52     0002                     pc              equ	2
    53     0002                     pcl             equ	2
    54     000A                     pclath          equ	10
    55     0003                     status          equ	3
    56     0000                     INDF            equ	0	;# 
    57     0001                     TMR0            equ	1	;# 
    58     0002                     PCL             equ	2	;# 
    59     0003                     STATUS          equ	3	;# 
    60     0004                     FSR             equ	4	;# 
    61     0005                     PORTA           equ	5	;# 
    62     0006                     PORTB           equ	6	;# 
    63     0007                     PORTC           equ	7	;# 
    64     0008                     PORTD           equ	8	;# 
    65     0009                     PORTE           equ	9	;# 
    66     000A                     PCLATH          equ	10	;# 
    67     000B                     INTCON          equ	11	;# 
    68     000C                     PIR1            equ	12	;# 
    69     000D                     PIR2            equ	13	;# 
    70     000E                     TMR1            equ	14	;# 
    71     000E                     TMR1L           equ	14	;# 
    72     000F                     TMR1H           equ	15	;# 
    73     0010                     T1CON           equ	16	;# 
    74     0011                     TMR2            equ	17	;# 
    75     0012                     T2CON           equ	18	;# 
    76     0013                     SSPBUF          equ	19	;# 
    77     0014                     SSPCON          equ	20	;# 
    78     0015                     CCPR1           equ	21	;# 
    79     0015                     CCPR1L          equ	21	;# 
    80     0016                     CCPR1H          equ	22	;# 
    81     0017                     CCP1CON         equ	23	;# 
    82     0018                     RCSTA           equ	24	;# 
    83     0019                     TXREG           equ	25	;# 
    84     001A                     RCREG           equ	26	;# 
    85     001B                     CCPR2           equ	27	;# 
    86     001B                     CCPR2L          equ	27	;# 
    87     001C                     CCPR2H          equ	28	;# 
    88     001D                     CCP2CON         equ	29	;# 
    89     001E                     ADRESH          equ	30	;# 
    90     001F                     ADCON0          equ	31	;# 
    91     0081                     OPTION_REG      equ	129	;# 
    92     0085                     TRISA           equ	133	;# 
    93     0086                     TRISB           equ	134	;# 
    94     0087                     TRISC           equ	135	;# 
    95     0088                     TRISD           equ	136	;# 
    96     0089                     TRISE           equ	137	;# 
    97     008C                     PIE1            equ	140	;# 
    98     008D                     PIE2            equ	141	;# 
    99     008E                     PCON            equ	142	;# 
   100     008F                     OSCCON          equ	143	;# 
   101     0090                     OSCTUNE         equ	144	;# 
   102     0091                     SSPCON2         equ	145	;# 
   103     0092                     PR2             equ	146	;# 
   104     0093                     SSPADD          equ	147	;# 
   105     0093                     SSPMSK          equ	147	;# 
   106     0093                     MSK             equ	147	;# 
   107     0094                     SSPSTAT         equ	148	;# 
   108     0095                     WPUB            equ	149	;# 
   109     0096                     IOCB            equ	150	;# 
   110     0097                     VRCON           equ	151	;# 
   111     0098                     TXSTA           equ	152	;# 
   112     0099                     SPBRG           equ	153	;# 
   113     009A                     SPBRGH          equ	154	;# 
   114     009B                     PWM1CON         equ	155	;# 
   115     009C                     ECCPAS          equ	156	;# 
   116     009D                     PSTRCON         equ	157	;# 
   117     009E                     ADRESL          equ	158	;# 
   118     009F                     ADCON1          equ	159	;# 
   119     0105                     WDTCON          equ	261	;# 
   120     0107                     CM1CON0         equ	263	;# 
   121     0108                     CM2CON0         equ	264	;# 
   122     0109                     CM2CON1         equ	265	;# 
   123     010C                     EEDATA          equ	268	;# 
   124     010C                     EEDAT           equ	268	;# 
   125     010D                     EEADR           equ	269	;# 
   126     010E                     EEDATH          equ	270	;# 
   127     010F                     EEADRH          equ	271	;# 
   128     0185                     SRCON           equ	389	;# 
   129     0187                     BAUDCTL         equ	391	;# 
   130     0188                     ANSEL           equ	392	;# 
   131     0189                     ANSELH          equ	393	;# 
   132     018C                     EECON1          equ	396	;# 
   133     018D                     EECON2          equ	397	;# 
   134     0000                     INDF            equ	0	;# 
   135     0001                     TMR0            equ	1	;# 
   136     0002                     PCL             equ	2	;# 
   137     0003                     STATUS          equ	3	;# 
   138     0004                     FSR             equ	4	;# 
   139     0005                     PORTA           equ	5	;# 
   140     0006                     PORTB           equ	6	;# 
   141     0007                     PORTC           equ	7	;# 
   142     0008                     PORTD           equ	8	;# 
   143     0009                     PORTE           equ	9	;# 
   144     000A                     PCLATH          equ	10	;# 
   145     000B                     INTCON          equ	11	;# 
   146     000C                     PIR1            equ	12	;# 
   147     000D                     PIR2            equ	13	;# 
   148     000E                     TMR1            equ	14	;# 
   149     000E                     TMR1L           equ	14	;# 
   150     000F                     TMR1H           equ	15	;# 
   151     0010                     T1CON           equ	16	;# 
   152     0011                     TMR2            equ	17	;# 
   153     0012                     T2CON           equ	18	;# 
   154     0013                     SSPBUF          equ	19	;# 
   155     0014                     SSPCON          equ	20	;# 
   156     0015                     CCPR1           equ	21	;# 
   157     0015                     CCPR1L          equ	21	;# 
   158     0016                     CCPR1H          equ	22	;# 
   159     0017                     CCP1CON         equ	23	;# 
   160     0018                     RCSTA           equ	24	;# 
   161     0019                     TXREG           equ	25	;# 
   162     001A                     RCREG           equ	26	;# 
   163     001B                     CCPR2           equ	27	;# 
   164     001B                     CCPR2L          equ	27	;# 
   165     001C                     CCPR2H          equ	28	;# 
   166     001D                     CCP2CON         equ	29	;# 
   167     001E                     ADRESH          equ	30	;# 
   168     001F                     ADCON0          equ	31	;# 
   169     0081                     OPTION_REG      equ	129	;# 
   170     0085                     TRISA           equ	133	;# 
   171     0086                     TRISB           equ	134	;# 
   172     0087                     TRISC           equ	135	;# 
   173     0088                     TRISD           equ	136	;# 
   174     0089                     TRISE           equ	137	;# 
   175     008C                     PIE1            equ	140	;# 
   176     008D                     PIE2            equ	141	;# 
   177     008E                     PCON            equ	142	;# 
   178     008F                     OSCCON          equ	143	;# 
   179     0090                     OSCTUNE         equ	144	;# 
   180     0091                     SSPCON2         equ	145	;# 
   181     0092                     PR2             equ	146	;# 
   182     0093                     SSPADD          equ	147	;# 
   183     0093                     SSPMSK          equ	147	;# 
   184     0093                     MSK             equ	147	;# 
   185     0094                     SSPSTAT         equ	148	;# 
   186     0095                     WPUB            equ	149	;# 
   187     0096                     IOCB            equ	150	;# 
   188     0097                     VRCON           equ	151	;# 
   189     0098                     TXSTA           equ	152	;# 
   190     0099                     SPBRG           equ	153	;# 
   191     009A                     SPBRGH          equ	154	;# 
   192     009B                     PWM1CON         equ	155	;# 
   193     009C                     ECCPAS          equ	156	;# 
   194     009D                     PSTRCON         equ	157	;# 
   195     009E                     ADRESL          equ	158	;# 
   196     009F                     ADCON1          equ	159	;# 
   197     0105                     WDTCON          equ	261	;# 
   198     0107                     CM1CON0         equ	263	;# 
   199     0108                     CM2CON0         equ	264	;# 
   200     0109                     CM2CON1         equ	265	;# 
   201     010C                     EEDATA          equ	268	;# 
   202     010C                     EEDAT           equ	268	;# 
   203     010D                     EEADR           equ	269	;# 
   204     010E                     EEDATH          equ	270	;# 
   205     010F                     EEADRH          equ	271	;# 
   206     0185                     SRCON           equ	389	;# 
   207     0187                     BAUDCTL         equ	391	;# 
   208     0188                     ANSEL           equ	392	;# 
   209     0189                     ANSELH          equ	393	;# 
   210     018C                     EECON1          equ	396	;# 
   211     018D                     EECON2          equ	397	;# 
   212     0017                     _CCP1CONbits    set	23
   213     0012                     _T2CON          set	18
   214     0017                     _CCP1CON        set	23
   215     0015                     _CCPR1L         set	21
   216     001E                     _ADRESH         set	30
   217     001F                     _ADCON0         set	31
   218     00F9                     _GO_nDONE       set	249
   219     0085                     _TRISA          set	133
   220     0092                     _PR2            set	146
   221     009E                     _ADRESL         set	158
   222     009F                     _ADCON1         set	159
   223     043A                     _TRISC2         set	1082
   224                           
   225                           	psect	cinit
   226     07FC                     start_initialization:	
   227                           ; #config settings
   228                           
   229     07FC                     __initialization:
   230     07FC                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233     07FC                     __end_of__initialization:
   234     07FC  0183               	clrf	3
   235     07FD  120A  118A  2FCD   	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	cstackCOMMON
   238     0070                     __pcstackCOMMON:
   239     0070                     ?_ADC_Init:
   240     0070                     ?_PWM_Init:	
   241                           ; 1 bytes @ 0x0
   242                           
   243     0070                     ?_PWM_SetDuty:	
   244                           ; 1 bytes @ 0x0
   245                           
   246     0070                     ?_main:	
   247                           ; 1 bytes @ 0x0
   248                           
   249     0070                     ?_ADC_Read:	
   250                           ; 1 bytes @ 0x0
   251                           
   252     0070                     PWM_SetDuty@duty:	
   253                           ; 2 bytes @ 0x0
   254                           
   255     0070                     ??_ADC_Init:	
   256                           ; 2 bytes @ 0x0
   257                           
   258     0070                     ??_PWM_Init:	
   259                           ; 1 bytes @ 0x0
   260                           
   261                           
   262                           ; 1 bytes @ 0x0
   263     0070                     	ds	2
   264     0072                     ??_ADC_Read:
   265     0072                     ??_PWM_SetDuty:	
   266                           ; 1 bytes @ 0x2
   267                           
   268                           
   269                           ; 1 bytes @ 0x2
   270     0072                     	ds	1
   271     0073                     ADC_Read@channel:
   272                           
   273                           ; 1 bytes @ 0x3
   274     0073                     	ds	1
   275     0074                     ??_main:
   276                           
   277                           ; 1 bytes @ 0x4
   278     0074                     	ds	2
   279     0076                     main@adc_value:
   280                           
   281                           ; 2 bytes @ 0x6
   282     0076                     	ds	2
   283                           
   284                           	psect	maintext
   285     07CD                     __pmaintext:	
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 44 in file "tarea.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;  adc_value       2    6[COMMON] unsigned int 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, status,2, status,0, pclath, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : B00/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   305 ;;      Params:         0       0       0       0       0
   306 ;;      Locals:         2       0       0       0       0
   307 ;;      Temps:          2       0       0       0       0
   308 ;;      Totals:         4       0       0       0       0
   309 ;;Total ram usage:        4 bytes
   310 ;; Hardware stack levels required when called: 1
   311 ;; This function calls:
   312 ;;		_ADC_Init
   313 ;;		_ADC_Read
   314 ;;		_PWM_Init
   315 ;;		_PWM_SetDuty
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321     07CD                     _main:	
   322                           ;psect for function _main
   323                           
   324     07CD                     l652:	
   325                           ;incstack = 0
   326                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   327                           
   328     07CD  3001               	movlw	1
   329     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   330     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   331     07D0  0085               	movwf	5	;volatile
   332     07D1  1107               	bcf	7,2	;volatile
   333     07D2                     l654:
   334     07D2  120A  118A  2772  120A  118A  	fcall	_ADC_Init
   335     07D7  120A  118A  277A  120A  118A  	fcall	_PWM_Init
   336     07DC                     l656:
   337     07DC  3000               	movlw	0
   338     07DD  120A  118A  2786  120A  118A  	fcall	_ADC_Read
   339     07E2  0871               	movf	?_ADC_Read+1,w
   340     07E3  00F7               	movwf	main@adc_value+1
   341     07E4  0870               	movf	?_ADC_Read,w
   342     07E5  00F6               	movwf	main@adc_value
   343     07E6                     l658:
   344     07E6  0877               	movf	main@adc_value+1,w
   345     07E7  00F1               	movwf	PWM_SetDuty@duty+1
   346     07E8  0876               	movf	main@adc_value,w
   347     07E9  00F0               	movwf	PWM_SetDuty@duty
   348     07EA  120A  118A  27A8  120A  118A  	fcall	_PWM_SetDuty
   349     07EF                     l660:
   350     07EF  301A               	movlw	26
   351     07F0  00F5               	movwf	??_main+1
   352     07F1  30F8               	movlw	248
   353     07F2  00F4               	movwf	??_main
   354     07F3                     u77:
   355     07F3  0BF4               	decfsz	??_main,f
   356     07F4  2FF3               	goto	u77
   357     07F5  0BF5               	decfsz	??_main+1,f
   358     07F6  2FF3               	goto	u77
   359     07F7  0000               	nop
   360     07F8  2FDC               	goto	l656
   361     07F9  120A  118A  2800   	ljmp	start
   362     07FC                     __end_of_main:
   363                           
   364                           	psect	text1
   365     07A8                     __ptext1:	
   366 ;; *************** function _PWM_SetDuty *****************
   367 ;; Defined at:
   368 ;;		line 38 in file "tarea.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  duty            2    0[COMMON] unsigned int 
   371 ;; Auto vars:     Size  Location     Type
   372 ;;		None
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, status,2, status,0
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   382 ;;      Params:         2       0       0       0       0
   383 ;;      Locals:         0       0       0       0       0
   384 ;;      Temps:          2       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels used: 1
   388 ;; This function calls:
   389 ;;		Nothing
   390 ;; This function is called by:
   391 ;;		_main
   392 ;; This function uses a non-reentrant model
   393 ;;
   394                           
   395     07A8                     _PWM_SetDuty:	
   396                           ;psect for function _PWM_SetDuty
   397                           
   398     07A8                     l644:	
   399                           ;incstack = 0
   400                           ; Regs used in _PWM_SetDuty: [wreg+status,2+status,0]
   401                           
   402                           
   403                           ;tarea.c: 39:         _delay((unsigned long)((10)*(8000000/4000.0)));
   404     07A8  3004               	movlw	4
   405     07A9  0271               	subwf	PWM_SetDuty@duty+1,w
   406     07AA  3000               	movlw	0
   407     07AB  1903               	skipnz
   408     07AC  0270               	subwf	PWM_SetDuty@duty,w
   409     07AD  1C03               	skipc
   410     07AE  2FB0               	goto	u61
   411     07AF  2FB1               	goto	u60
   412     07B0                     u61:
   413     07B0  2FB5               	goto	l648
   414     07B1                     u60:
   415     07B1                     l646:
   416     07B1  30FF               	movlw	255
   417     07B2  00F0               	movwf	PWM_SetDuty@duty
   418     07B3  3003               	movlw	3
   419     07B4  00F1               	movwf	PWM_SetDuty@duty+1
   420     07B5                     l648:
   421                           
   422                           ;tarea.c: 40:     }
   423     07B5  0871               	movf	PWM_SetDuty@duty+1,w
   424     07B6  00F3               	movwf	??_PWM_SetDuty+1
   425     07B7  0870               	movf	PWM_SetDuty@duty,w
   426     07B8  00F2               	movwf	??_PWM_SetDuty
   427     07B9  1003               	clrc
   428     07BA  0CF3               	rrf	??_PWM_SetDuty+1,f
   429     07BB  0CF2               	rrf	??_PWM_SetDuty,f
   430     07BC  1003               	clrc
   431     07BD  0CF3               	rrf	??_PWM_SetDuty+1,f
   432     07BE  0CF2               	rrf	??_PWM_SetDuty,f
   433     07BF  0872               	movf	??_PWM_SetDuty,w
   434     07C0  1283               	bcf	3,5	;RP0=0, select bank0
   435     07C1  1303               	bcf	3,6	;RP1=0, select bank0
   436     07C2  0095               	movwf	21	;volatile
   437     07C3                     l650:
   438                           
   439                           ;tarea.c: 41: }
   440     07C3  0870               	movf	PWM_SetDuty@duty,w
   441     07C4  3903               	andlw	3
   442     07C5  00F2               	movwf	??_PWM_SetDuty
   443     07C6  0EF2               	swapf	??_PWM_SetDuty,f
   444     07C7  0817               	movf	23,w	;volatile
   445     07C8  0672               	xorwf	??_PWM_SetDuty,w
   446     07C9  39CF               	andlw	-49
   447     07CA  0672               	xorwf	??_PWM_SetDuty,w
   448     07CB  0097               	movwf	23	;volatile
   449     07CC                     l42:
   450     07CC  0008               	return
   451     07CD                     __end_of_PWM_SetDuty:
   452                           
   453                           	psect	text2
   454     077A                     __ptext2:	
   455 ;; *************** function _PWM_Init *****************
   456 ;; Defined at:
   457 ;;		line 31 in file "tarea.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;                  1    wreg      void 
   464 ;; Registers used:
   465 ;;		status,2
   466 ;; Tracked objects:
   467 ;;		On entry : 0/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   471 ;;      Params:         0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels used: 1
   477 ;; This function calls:
   478 ;;		Nothing
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484     077A                     _PWM_Init:	
   485                           ;psect for function _PWM_Init
   486                           
   487     077A                     l608:	
   488                           ;incstack = 0
   489                           ; Regs used in _PWM_Init: [status,2]
   490                           
   491                           
   492                           ;tarea.c: 32: 
   493     077A  307C               	movlw	124
   494     077B  1683               	bsf	3,5	;RP0=1, select bank1
   495     077C  1303               	bcf	3,6	;RP1=0, select bank1
   496     077D  0092               	movwf	18	;volatile
   497     077E                     l610:
   498                           
   499                           ;tarea.c: 33:     ADC_Init();
   500     077E  1283               	bcf	3,5	;RP0=0, select bank0
   501     077F  1303               	bcf	3,6	;RP1=0, select bank0
   502     0780  0195               	clrf	21	;volatile
   503     0781                     l612:
   504                           
   505                           ;tarea.c: 34:     PWM_Init();
   506     0781  300C               	movlw	12
   507     0782  0097               	movwf	23	;volatile
   508     0783                     l614:
   509                           
   510                           ;tarea.c: 35: 
   511     0783  3005               	movlw	5
   512     0784  0092               	movwf	18	;volatile
   513     0785                     l38:
   514     0785  0008               	return
   515     0786                     __end_of_PWM_Init:
   516                           
   517                           	psect	text3
   518     0786                     __ptext3:	
   519 ;; *************** function _ADC_Read *****************
   520 ;; Defined at:
   521 ;;		line 22 in file "tarea.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;  channel         1    wreg     unsigned char 
   524 ;; Auto vars:     Size  Location     Type
   525 ;;  channel         1    3[COMMON] unsigned char 
   526 ;; Return value:  Size  Location     Type
   527 ;;                  2    0[COMMON] unsigned int 
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         2       0       0       0       0
   536 ;;      Locals:         1       0       0       0       0
   537 ;;      Temps:          1       0       0       0       0
   538 ;;      Totals:         4       0       0       0       0
   539 ;;Total ram usage:        4 bytes
   540 ;; Hardware stack levels used: 1
   541 ;; This function calls:
   542 ;;		Nothing
   543 ;; This function is called by:
   544 ;;		_main
   545 ;; This function uses a non-reentrant model
   546 ;;
   547                           
   548     0786                     _ADC_Read:	
   549                           ;psect for function _ADC_Read
   550                           
   551                           
   552                           ;incstack = 0
   553                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
   554                           ;ADC_Read@channel stored from wreg
   555     0786  00F3               	movwf	ADC_Read@channel
   556     0787                     l634:
   557                           
   558                           ;tarea.c: 23: void PWM_SetDuty(unsigned int duty) {
   559     0787  30C3               	movlw	195
   560     0788  1283               	bcf	3,5	;RP0=0, select bank0
   561     0789  1303               	bcf	3,6	;RP1=0, select bank0
   562     078A  059F               	andwf	31,f	;volatile
   563                           
   564                           ;tarea.c: 24:     if (duty > 1023) duty = 1023;
   565     078B  0873               	movf	ADC_Read@channel,w	;volatile
   566     078C  00F2               	movwf	??_ADC_Read
   567     078D  3001               	movlw	1
   568     078E                     u45:
   569     078E  1003               	clrc
   570     078F  0DF2               	rlf	??_ADC_Read,f
   571     0790  3EFF               	addlw	-1
   572     0791  1D03               	skipz
   573     0792  2F8E               	goto	u45
   574     0793  1003               	clrc
   575     0794  0D72               	rlf	??_ADC_Read,w
   576     0795  049F               	iorwf	31,f	;volatile
   577     0796                     l636:
   578                           
   579                           ;tarea.c: 25:     CCPR1L = (unsigned char)(duty >> 2);
   580     0796  3003               	movlw	3
   581     0797  00F2               	movwf	??_ADC_Read
   582     0798                     u87:
   583     0798  0BF2               	decfsz	??_ADC_Read,f
   584     0799  2F98               	goto	u87
   585     079A                     l638:
   586                           
   587                           ;tarea.c: 26:     CCP1CONbits.DC1B = (unsigned char)(duty & 0x03);
   588     079A  1283               	bcf	3,5	;RP0=0, select bank0
   589     079B  1303               	bcf	3,6	;RP1=0, select bank0
   590     079C  149F               	bsf	31,1	;volatile
   591     079D                     l32:	
   592                           ;tarea.c: 27: }
   593                           
   594     079D  189F               	btfsc	31,1	;volatile
   595     079E  2FA0               	goto	u51
   596     079F  2FA1               	goto	u50
   597     07A0                     u51:
   598     07A0  2F9D               	goto	l32
   599     07A1                     u50:
   600     07A1                     l640:
   601                           
   602                           ;tarea.c: 28: 
   603     07A1  081E               	movf	30,w	;volatile
   604     07A2  00F1               	movwf	?_ADC_Read+1
   605     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   606     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   607     07A5  081E               	movf	30,w	;volatile
   608     07A6  00F0               	movwf	?_ADC_Read
   609     07A7                     l35:
   610     07A7  0008               	return
   611     07A8                     __end_of_ADC_Read:
   612                           
   613                           	psect	text4
   614     0772                     __ptext4:	
   615 ;; *************** function _ADC_Init *****************
   616 ;; Defined at:
   617 ;;		line 17 in file "tarea.c"
   618 ;; Parameters:    Size  Location     Type
   619 ;;		None
   620 ;; Auto vars:     Size  Location     Type
   621 ;;		None
   622 ;; Return value:  Size  Location     Type
   623 ;;                  1    wreg      void 
   624 ;; Registers used:
   625 ;;		status,2
   626 ;; Tracked objects:
   627 ;;		On entry : 0/0
   628 ;;		On exit  : 0/0
   629 ;;		Unchanged: 0/0
   630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   631 ;;      Params:         0       0       0       0       0
   632 ;;      Locals:         0       0       0       0       0
   633 ;;      Temps:          0       0       0       0       0
   634 ;;      Totals:         0       0       0       0       0
   635 ;;Total ram usage:        0 bytes
   636 ;; Hardware stack levels used: 1
   637 ;; This function calls:
   638 ;;		Nothing
   639 ;; This function is called by:
   640 ;;		_main
   641 ;; This function uses a non-reentrant model
   642 ;;
   643                           
   644     0772                     _ADC_Init:	
   645                           ;psect for function _ADC_Init
   646                           
   647     0772                     l594:	
   648                           ;incstack = 0
   649                           ; Regs used in _ADC_Init: [status,2]
   650                           
   651                           
   652                           ;tarea.c: 18:     CCPR1L = 0;
   653     0772  3001               	movlw	1
   654     0773  1283               	bcf	3,5	;RP0=0, select bank0
   655     0774  1303               	bcf	3,6	;RP1=0, select bank0
   656     0775  009F               	movwf	31	;volatile
   657     0776                     l596:
   658                           
   659                           ;tarea.c: 19:     CCP1CON = 0b00001100;
   660     0776  1683               	bsf	3,5	;RP0=1, select bank1
   661     0777  1303               	bcf	3,6	;RP1=0, select bank1
   662     0778  019F               	clrf	31	;volatile
   663     0779                     l29:
   664     0779  0008               	return
   665     077A                     __end_of_ADC_Init:
   666     0002                     ___latbits      equ	2
   667     007E                     btemp           set	126	;btemp
   668     007E                     wtemp0          set	126
   669                           
   670                           	psect	config
   671                           
   672                           ;Config register CONFIG1 @ 0x2007
   673                           ;	Oscillator Selection bits
   674                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   675                           ;	Watchdog Timer Enable bit
   676                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   677                           ;	Power-up Timer Enable bit
   678                           ;	PWRTE = OFF, PWRT disabled
   679                           ;	RE3/MCLR pin function select bit
   680                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
   681                           ;	Code Protection bit
   682                           ;	CP = OFF, Program memory code protection is disabled
   683                           ;	Data Code Protection bit
   684                           ;	CPD = OFF, Data memory code protection is disabled
   685                           ;	Brown Out Reset Selection bits
   686                           ;	BOREN = OFF, BOR disabled
   687                           ;	Internal External Switchover bit
   688                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   689                           ;	Fail-Safe Clock Monitor Enabled bit
   690                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   691                           ;	Low Voltage Programming Enable bit
   692                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   693                           ;	In-Circuit Debugger Mode bit
   694                           ;	DEBUG = 0x1, unprogrammed default
   695     2007                     	org	8199
   696     2007  20F4               	dw	8436

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_ADC_Read
    _main->_PWM_SetDuty

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     120
                                              4 COMMON     4     4      0
                           _ADC_Init
                           _ADC_Read
                           _PWM_Init
                        _PWM_SetDuty
 ---------------------------------------------------------------------------------
 (1) _PWM_SetDuty                                          4     2      2      68
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             4     2      2      29
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _ADC_Read
   _PWM_Init
   _PWM_SetDuty

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON           14      0       0      0.0%
BITBANK0            80      0       0      0.0%
BITBANK1            80      0       0      0.0%
BITBANK3            96      0       0      0.0%
BITBANK2            96      0       0      0.0%
COMMON              14      8       8     57.1%
BANK0               80      0       0      0.0%
BANK1               80      0       0      0.0%
BANK3               96      0       0      0.0%
BANK2               96      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0       8      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Mon Mar 31 23:41:55 2025

                     l32 079D                       l42 07CC                       l35 07A7  
                     l29 0779                       l38 0785                       u50 07A1  
                     u51 07A0                       u60 07B1                       u45 078E  
                     u61 07B0                       u77 07F3                       u87 0798  
                    l610 077E                      l612 0781                      l614 0783  
                    l640 07A1                      l608 077A                      l634 0787  
                    l650 07C3                      l636 0796                      l644 07A8  
                    l660 07EF                      l652 07CD                      l638 079A  
                    l646 07B1                      l654 07D2                      l648 07B5  
                    l656 07DC                      l594 0772                      l658 07E6  
                    l596 0776                      _PR2 0092          PWM_SetDuty@duty 0070  
            _PWM_SetDuty 07A8                     _main 07CD                     btemp 007E  
       __end_of_ADC_Init 077A         __end_of_ADC_Read 07A8                     start 0000  
                  ?_main 0070                    _T2CON 0012                    _TRISA 0085  
       __end_of_PWM_Init 0786                    status 0003                    wtemp0 007E  
          main@adc_value 0076          __initialization 07FC             __end_of_main 07FC  
                 ??_main 0074                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _CCPR1L 0015  
                 _TRISC2 043A          ADC_Read@channel 0073                ?_ADC_Init 0070  
              ?_ADC_Read 0070  __end_of__initialization 07FC           __pcstackCOMMON 0070  
              ?_PWM_Init 0070             ?_PWM_SetDuty 0070               ??_ADC_Init 0070  
             ??_ADC_Read 0072               __pmaintext 07CD                  _CCP1CON 0017  
             ??_PWM_Init 0070                  __ptext1 07A8                  __ptext2 077A  
                __ptext3 0786                  __ptext4 0772     end_of_initialization 07FC  
            _CCP1CONbits 0017      start_initialization 07FC                ___latbits 0002  
               _ADC_Init 0772                 _ADC_Read 0786                 _GO_nDONE 00F9  
               _PWM_Init 077A            ??_PWM_SetDuty 0072      __end_of_PWM_SetDuty 07CD  
